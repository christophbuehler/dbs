----------------- DROP -----------------
DROP TABLE revision;
DROP TABLE mitarbeiter;
DROP TABLE autor_hat_artikel;
DROP TABLE autor_hat_sprache;
DROP TABLE autor;
DROP TABLE person;
DROP TABLE artikel;
DROP TABLE universitaet;
DROP TABLE sprache;

----------------- CREATE -----------------
CREATE TABLE person (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    nachname VARCHAR(20),
    vorname VARCHAR(20),
    dob DATE,
    PRIMARY KEY (id)
);
CREATE TABLE mitarbeiter (
    snr NUMBER,
    person_id NUMBER,
    lohn VARCHAR(20),
    einst_datum DATE,
    PRIMARY KEY (snr),
    FOREIGN KEY (person_id) REFERENCES person
);
CREATE TABLE sprache (
    kuerzel VARCHAR(8),
    ist_rtl NUMBER(1),
    name VARCHAR(20),
    zeichen VARCHAR(20),
    PRIMARY KEY (kuerzel)
);
CREATE TABLE universitaet (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(80),
    studierende NUMBER,
    PRIMARY KEY (id)
);
CREATE TABLE autor (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    uni_id NUMBER,
    taetig_seit DATE,
    kuerzel VARCHAR(20),
    PRIMARY KEY (id),
    FOREIGN KEY (uni_id) REFERENCES universitaet
);
CREATE TABLE autor_hat_sprache (
    autor_id NUMBER,
    sprache_kuerzel VARCHAR(8),
    PRIMARY KEY (autor_id, sprache_kuerzel),
    FOREIGN KEY (autor_id) REFERENCES autor,
    FOREIGN KEY (sprache_kuerzel) REFERENCES sprache
);
CREATE TABLE post (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    uni_id NUMBER, 
    hauptautor_id NUMBER,
    ref_post_id NUMBER,
    sprache_kuerzel VARCHAR(8),
    datum DATE,
    ist_live NUMBER(1),
    likes NUMBER,
    PRIMARY KEY (id, uni_id),
    FOREIGN KEY (hauptautor_id) REFERENCES autor,
    FOREIGN KEY (ref_post_id) REFERENCES post,
    FOREIGN KEY (sprache_kuerzel) REFERENCES sprache,
    FOREIGN KEY (uni_id) REFERENCES universitaet
);
CREATE TABLE autor_hat_post (
    autor_id NUMBER,
    post_id NUMBER,
    PRIMARY KEY(autor_id, post_id),
    FOREIGN KEY (autor_id) REFERENCES autor,
    FOREIGN KEY (post_id) REFERENCES post
);
CREATE TABLE revision (
    post_id NUMBER,
    uni_id NUMBER,
    versnr NUMBER GENERATED BY DEFAULT AS IDENTITY,
    autor_id NUMBER,
    datum DATE,
    titel VARCHAR(80),
    inhalt VARCHAR(4000),
    PRIMARY KEY(post_id, versnr),
    FOREIGN KEY (uni_id) REFERENCES universitaet,
    FOREIGN KEY (autor_id) REFERENCES autor
);


----------------- CREATE PROCEDURES -----------------

CREATE PROCEDURE create_post (uni_id NUMBER, autor_id NUMBER, titel VARCHAR(80), inhalt VARCHAR(4000)) AS
    tot_emps NUMBER;
    BEGIN
        SELECT 


      DELETE FROM employees
      WHERE employees.employee_id = remove_emp.employee_id;
   tot_emps := tot_emps - 1;
   END;


CREATE PROCEDURE get_uni_posts (uni_id NUMBER)
    BEGIN
        SELECT id, datum
        FROM post
        WHERE ist_live = 1
        AND post.uni_id = uni_id
        ORDER BY datum
   END;